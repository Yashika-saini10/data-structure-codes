#include <stdio.h>
#include <stdlib.h>
#define MAX 

struct Stack {
    int arr[MAX];  
    int top;      
};
void initializeStack(struct Stack *s) {
    s->top = -1;  
}
int isFull(struct Stack *s) {
    return s->top == MAX - 1; 
}
int isEmpty(struct Stack *s) {
    return s->top == -1; 
}
void push(struct Stack *s, int value) {
    if (isFull(s)) {
        printf("Stack Overflow! Cannot push %d\n", value);
    } else {
        s->arr[++(s->top)] = value;
        printf("%d pushed to stack\n", value);
    }
}
int pop(struct Stack *s) {
    if (isEmpty(s)) {
        printf("Stack Underflow! Cannot pop\n");
        return -1; 
    } else {
        return s->arr[(s->top)--];     
}
int peek(struct Stack *s) {
    if (isEmpty(s)) {
        printf("Stack is empty\n");
        return -1;
    } else {
        return s->arr[s->top];
    }
}
void display(struct Stack *s) {
    if (isEmpty(s)) {
        printf("Stack is empty\n");
    } else {
        printf("Stack elements are: ");
        for (int i = 0; i <= s->top; i++) {
            printf("%d ", s->arr[i]);
        }
        printf("\n");
    }
}

int main() {
    struct Stack s; 
    initializeStack(&s); 
    push(&s, 10);
    push(&s, 20);
    push(&s, 30);
    push(&s, 40);
    push(&s, 50);

    display(&s); 

    printf("Top element is: %d\n", peek(&s));  

    printf("Popped element: %d\n", pop(&s));  
    display(&s);

    push(&s, 60);
    display(&s); 

    return 0;
}
